{"version":3,"sources":["./src/app/services/repository/repository.service.ts","./src/app/components/list-repositories/list-repositories.component.ts","./src/app/components/list-repositories/list-repositories.component.html","./src/app/pages/repository/repository.component.ts","./src/app/pages/repository/repository.component.html","./src/environments/environment.ts","./src/app/components/form-repository/form-repository.component.ts","./src/app/components/form-repository/form-repository.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/app.module.ts","./src/app/components/repository-info/repository-info.component.ts","./src/app/components/repository-info/repository-info.component.html","./src/app/app-routing.module.ts","./src/app/components/bar-info/bar-info.component.ts","./src/app/components/bar-info/bar-info.component.html","./src/app/components/lists/list-issues/list-issues.component.ts","./src/app/components/lists/list-issues/list-issues.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEoB;;;AA2BxD,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,iBAAiB,CAAC,UAAkB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,qEAAW,CAAC,MAAM,SAAS,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,QAAQ,CAAC,UAAkB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,qEAAW,CAAC,MAAM,SAAS,UAAU,SAAS,CAAC,CAAC;IACnF,CAAC;IAED,kBAAkB;QAChB,MAAM,oBAAoB,GAAG,YAAY,CAAC,OAAO,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC;QAC1E,OAAO,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtE,CAAC;IAED,aAAa,CAAC,YAAY;QACxB,YAAY,CAAC,OAAO,CAAC,qEAAW,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7E,CAAC;;kFAnBU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICCvD,qEACE;IAAA,uEACE;IAAA,6EAMe;IACjB,4DAAI;IACN,4DAAK;;;IATA,0DAAyE;IAAzE,4LAAyE;IAExE,0DAA8B;IAA9B,0FAA8B;;ADI/B,MAAM,yBAAyB;IAEpC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kGALU,yBAAyB;yGAAzB,yBAAyB;QCRtC,wEACE;QAAA,mHACE;QAUJ,4DAAK;;QAXC,0DAAuC;QAAvC,qFAAuC;;6FDOhC,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;sCAEU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAS3C,MAAM,mBAAmB;IAG9B,YAAoB,iBAAmC,EAAU,KAAqB;QAAlE,sBAAiB,GAAjB,iBAAiB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE3F,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACrC,MAAM,UAAU,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,UAAU,EAAE;YAEzD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAC5E,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;YACjC,CAAC,CAAC;YAEF,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;;sFAjBU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACE;QAAA,oFAAqE;QACrE,gFAAqD;QACvD,4DAAM;;QAFiB,0DAAyB;QAAzB,sFAAyB;QAC7B,0DAAiB;QAAjB,8EAAiB;;6FDOvB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,yBAAyB;IACjC,UAAU,EAAE,8BAA8B;CAC3C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;;;ICYnF,0EAAwE;IAAA,kGAAkC;IAAA,4DAAO;;;ADJ1G,MAAM,uBAAuB;IAKlC;QAHU,WAAM,GAAG,IAAI,0DAAY,EAAE;IAGrB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,CAAC;QACR,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;;8FAlBU,uBAAuB;uGAAvB,uBAAuB;;;;;;QCRpC,6EACE;QAD8B,qJAAU,oBAAgB,IAAC;QACzD,8EASA;QAPE,0LAAmB;QAFrB,4DASA;QAAA,4EAAgD;QAAA,oEAAS;QAAA,4DAAS;QACpE,4DAAO;QACP,qHAAwE;;;;QAVpE,0DAAoE;QAApE,wKAAoE;QAQhD,0DAAyB;QAAzB,iFAAyB;QAE3C,0DAAmD;QAAnD,8FAAmD;;6FDJ5C,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;sCAEqC,IAAI;kBAAvC,uDAAS;mBAAC,MAAM,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;YACxB,MAAM;kBAAf,oDAAM;;;;;;;;;;;;;;AEVT;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,2EAA+B;QACjC,4DAAM;;6FDKO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,kBAAkB;IAG7B,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IACxD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAG,OAAO,UAAU,KAAK,QAAQ;YAAE,OAAO;QAE1C,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YACzE,MAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,YAAY,GAAG,YAAY;QAClC,CAAC,CAAC;IACJ,CAAC;;oFAlBU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACE;QAAA,oEACA;QAAA,wEAAkB;QAAA,+FAA+B;QAAA,4DAAK;QACtD,yFAA4E;QAAvD,+JAAU,yBAAqB,IAAC;QAAC,4DAAsB;QAC5E,sFAA6E;QAC/E,4DAAM;;QADmB,0DAA6B;QAA7B,0FAA6B;;6FDIzC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AAEW;AACT;AAC+B;AACF;AACqB;AACM;AAC5B;AACnB;AACmC;AACM;;AAsB1F,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,sEAAgB;SACjB;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,0FAAmB;QACnB,wFAAgB;QAChB,6GAAuB;QACvB,mHAAyB;QACzB,uFAAkB;QAClB,wGAAmB;QACnB,8GAAuB,aAGvB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,sEAAgB;6FAKP,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0FAAmB;oBACnB,wFAAgB;oBAChB,6GAAuB;oBACvB,mHAAyB;oBACzB,uFAAkB;oBAClB,wGAAmB;oBACnB,8GAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,sEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAyD;;AAQlD,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCRpC,yEACE;QAAA,4EACE;QAAA,oEAIA;QAAA,yEACE;QAAA,yEAAQ;QAAA,uDAA2B;QAAA,4DAAS;QAC5C,oEAAG;QAAA,uDAA6B;QAAA,4DAAI;QACtC,4DAAM;QACR,4DAAS;QACT,wEACE;QAAA,qEACE;QAAA,0EAAQ;QAAA,wDAAkC;QAAA,4DAAS;QACnD,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QACpB,4DAAK;QACL,sEACE;QAAA,0EAAQ;QAAA,wDAA6B;QAAA,4DAAS;QAC9C,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QACpB,4DAAK;QACL,sEACE;QAAA,0EAAQ;QAAA,wDAAmC;QAAA,4DAAS;QACpD,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAC7B,4DAAK;QACP,4DAAK;QACP,4DAAM;;QAtBA,0DAAoC;QAApC,6LAAoC;QAI5B,0DAA2B;QAA3B,yHAA2B;QAChC,0DAA6B;QAA7B,2HAA6B;QAKxB,0DAAkC;QAAlC,gIAAkC;QAIlC,0DAA6B;QAA7B,2HAA6B;QAI7B,0DAAmC;QAAnC,iIAAmC;;6FDbpC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;sCAEU,UAAU;kBAAlB,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACkB;AACG;;;AAE5E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,iCAAiC;QACvC,SAAS,EAAE,0FAAmB;KAC/B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAyD;;;;ICCvD,oEACA;;;IADoB,2IAAc;;ADM7B,MAAM,gBAAgB;IAM3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCP7B,6EACE;QAAA,4GACA;QAAA,sEACE;QAAA,yEAAQ;QAAA,uDAAW;QAAA,4DAAS;QAC5B,oEAAG;QAAA,uDAAiB;QAAA,4DAAI;QAC1B,4DAAM;QACN,oEAKF;QAAA,4DAAU;;QAVH,0DAAc;QAAd,4EAAc;QAET,0DAAW;QAAX,0EAAW;QAChB,0DAAiB;QAAjB,gFAAiB;;6FDGX,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;sCAEU,GAAG;kBAAX,mDAAK;YACG,MAAM;kBAAd,mDAAK;YACG,WAAW;kBAAnB,mDAAK;YACG,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICErD,qEACE;IAAA,uEACE;IAAA,6EAAoF;IACtF,4DAAI;IACN,4DAAK;;;IAHA,0DAAuB;IAAvB,gJAAuB;IACV,0DAAqB;IAArB,iFAAqB;;ADIpC,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCP9B,wEACE;QAAA,6GACE;QAIJ,4DAAK;;QALC,0DAA4B;QAA5B,+EAA4B;;6FDMvB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;sCAEU,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment'\nimport { Observable } from 'rxjs';\n\nexport interface IRepository {\n  name: string;\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nexport interface Issue {\n  title: string;\n  id: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getRepositoryData(repository: string): Observable<IRepository> {\n    return this.http.get<IRepository>(`${environment.urlApi}repos/${repository}`);\n  }\n\n  getIssue(repository: string): Observable<Issue[]> {\n    return this.http.get<Issue[]>(`${environment.urlApi}repos/${repository}/issues`);\n  }\n\n  getLocalRepository(): IRepository[] {\n    const storagedRepositories = localStorage.getItem(environment.storageKey);\n    return storagedRepositories ? JSON.parse(storagedRepositories) : [];\n  }\n\n  setRepository(repositories) {\n    localStorage.setItem(environment.storageKey, JSON.stringify(repositories));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {IRepository} from '../../services/repository/repository.service';\n\n@Component({\n  selector: 'app-list-repositories',\n  templateUrl: './list-repositories.component.html',\n  styleUrls: ['./list-repositories.component.scss']\n})\nexport class ListRepositoriesComponent implements OnInit {\n  @Input() repositories: IRepository[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"list\">\n  <li *ngFor=\"let repository of repositories\">\n    <a [routerLink]=\"['/repositorios', repository.owner.login, repository.name]\" >\n      <app-bar-info\n        [title]=\"repository.full_name\"\n        [description]=\"repository.description\"\n        [avatar]=\"repository.owner.avatar_url\"\n        [alt]=\"repository.owner.login\"\n      >\n      </app-bar-info>\n    </a>\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IRepository, Issue, RepositoryService } from 'src/app/services/repository/repository.service';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.scss']\n})\nexport class RepositoryComponent implements OnInit {\n  repository: IRepository;\n  issues: Issue[];\n  constructor(private repositoryService:RepositoryService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      const repository = `${params.owner}/${params.repository}`\n\n      this.repositoryService.getRepositoryData(repository).subscribe(repositories => {\n        this.repository = repositories;\n      })\n\n      this.repositoryService.getIssue(repository).subscribe(issues => {\n        this.issues = issues;\n      })\n    });\n  }\n}\n","<div class=\"about\">\n  <app-repository-info [repository]=\"repository\"></app-repository-info>\n  <app-list-issues [issues]=\"issues\"></app-list-issues>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  urlApi: \"https://api.github.com/\",\n  storageKey: \"@GithubExplorer:repositories\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-repository',\n  templateUrl: './form-repository.component.html',\n  styleUrls: ['./form-repository.component.scss']\n})\nexport class FormRepositoryComponent implements OnInit {\n  @ViewChild('form', {static: false}) form: NgForm\n  @Output() submit = new EventEmitter()\n  value: String\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  reset() {\n    this.value = \" \";\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.submit.emit(this.value);\n    this.reset();\n  }\n}\n","<form novalidate #form=\"ngForm\" (submit)=\"onSubmit($event)\">\n  <input\n    [ngClass]=\"{ 'error' : repository.invalid && !repository.pristine }\"\n    [(ngModel)]=\"value\"\n    type=\"text\"\n    name=\"repository\"\n    #repository=\"ngModel\"\n    required=\"true\"\n    placeholder=\"Digite o nome do repositorio aqui\"\n  />\n  <button type=\"submit\" [disabled]=\"form.invalid\">Pesquisar</button>\n</form>\n<span *ngIf=\"repository.invalid && !repository.pristine \" class=\"error\">Digite o autor/nome do repositório</span>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'github-explorer';\n}\n","<div id=\"app\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IRepository, RepositoryService } from 'src/app/services/repository/repository.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  repositories: IRepository[]\n\n  constructor(private repositoryService: RepositoryService) {\n  }\n\n  ngOnInit(): void {\n    this.repositories = this.repositoryService.getLocalRepository();\n  }\n\n  getRepository(repository: string){\n    if(typeof repository !== \"string\") return;\n\n    this.repositoryService.getRepositoryData(repository).subscribe((reponse) => {\n      const repositories = [...this.repositories, reponse];\n      this.repositoryService.setRepository(repositories);\n      this.repositories = repositories\n    })\n  }\n}\n","<div class=\"Dashboard\">\n  <img src=\"/assets/logo.svg\" alt=\"Github Explorer\" />\n  <h2 class=\"title\">Explore repositórios no Github.</h2>\n  <app-form-repository (submit)=\"getRepository($event)\"></app-form-repository>\n  <app-list-repositories [repositories]=\"repositories\"></app-list-repositories>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RepositoryComponent } from './pages/repository/repository.component';\nimport { BarInfoComponent } from './components/bar-info/bar-info.component';\nimport { FormRepositoryComponent } from './components/form-repository/form-repository.component';\nimport { ListRepositoriesComponent } from './components/list-repositories/list-repositories.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListIssuesComponent } from './components/lists/list-issues/list-issues.component';\nimport { RepositoryInfoComponent } from './components/repository-info/repository-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepositoryComponent,\n    BarInfoComponent,\n    FormRepositoryComponent,\n    ListRepositoriesComponent,\n    DashboardComponent,\n    ListIssuesComponent,\n    RepositoryInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IRepository } from 'src/app/services/repository/repository.service';\n\n@Component({\n  selector: 'app-repository-info',\n  templateUrl: './repository-info.component.html',\n  styleUrls: ['./repository-info.component.scss']\n})\nexport class RepositoryInfoComponent implements OnInit {\n  @Input() repository: IRepository\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"repository-info\">\n  <header class=\"repository-info__header\">\n    <img\n      [src]=\"repository?.owner.avatar_url\"\n      [alt]=\"repository?.owner.login\"\n    />\n    <div class=\"repository-info__container\">\n      <strong>{{ repository?.full_name }}</strong>\n      <p>{{ repository?.description }}</p>\n    </div>\n  </header>\n  <ul class=\"repository-info__list\">\n    <li>\n      <strong>{{ repository?.stargazers_count }}</strong>\n      <span>Stars</span>\n    </li>\n    <li>\n      <strong>{{ repository?.forks_count }}</strong>\n      <span>Forks</span>\n    </li>\n    <li>\n      <strong>{{ repository?.open_issues_count }}</strong>\n      <span>Issues abertas</span>\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\nimport {RepositoryComponent} from './pages/repository/repository.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n  {\n    path: 'repositorios/:owner/:repository',\n    component: RepositoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-info',\n  templateUrl: './bar-info.component.html',\n  styleUrls: ['./bar-info.component.scss']\n})\nexport class BarInfoComponent implements OnInit {\n  @Input() alt: string;\n  @Input() avatar: string;\n  @Input() description: string;\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article class=\"bar-info\">\n  <img *ngIf=\"avatar\" [src]=\"avatar\" [alt]=\"alt\" />\n  <div>\n    <strong>{{ title }}</strong>\n    <p>{{ description }}</p>\n  </div>\n  <img\n    class=\"arrow\"\n    src=\"/assets/icons/FiChevronRight.svg\"\n    alt=\"Chevron Right\"\n  />\n</article>\n","import { Component, Input, OnInit } from '@angular/core';\nimport {Issue} from '../../../services/repository/repository.service';\n\n@Component({\n  selector: 'app-list-issues',\n  templateUrl: './list-issues.component.html',\n  styleUrls: ['./list-issues.component.scss']\n})\nexport class ListIssuesComponent implements OnInit {\n  @Input() issues: Issue[]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n  <ul class=\"list\">\n    <li *ngFor=\"let issue of issues\">\n      <a [href]=\"issue.html_url\">\n        <app-bar-info [title]=\"issue.title\" [description]=\"issue.user.login\"></app-bar-info>\n      </a>\n    </li>\n  </ul>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}